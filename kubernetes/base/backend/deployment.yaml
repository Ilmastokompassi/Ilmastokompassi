apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    tier: backend
    deploymentType: with-init-container
    needs-db: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tier: backend
    spec:
      containers:
        - name: backend
          image: ilmastokompassi/backend
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 300Mi
          envFrom:
            - secretRef:
                name: ilmastokompassi-backend-config
      initContainers:
        - name: run-db-migrations
          image: ilmastokompassi/backend
          command:
            - bash
            - "-c"
            - |
              echo Waiting for postgres to be available
              until pg_isready -d $DATABASE_URI; do sleep 1; done;
              echo Postgres is available, applying migrations..
              ./bin/db-migrate
              echo Migrations done!
          resources:
            requests:
              cpu: 20m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 300Mi
          envFrom:
            - secretRef:
                name: ilmastokompassi-backend-config
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    tier: backend
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    tier: backend
